name: Build Releases
on:
  push:
    branches:
      - main
    tags:
      - v*
  workflow_dispatch: {}
    

env:
  CARGO_TERM_COLOR: always

jobs:
  build-linux:
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - aarch64-unknown-linux-gnu

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: nightly
          default: true
          override: true

      - name: Install cross
        run: |
          cargo install cross

      - name: Build ${{ matrix.target }}
        timeout-minutes: 120
        run: |
          cross build --release --target ${{ matrix.target }}
          
      - name: Build check
        run: |
          ls -al target/${{ matrix.target }}/release/clash-config-proxy

      - name: Package ${{ matrix.target }}
        run: |
          cd target/${{ matrix.target }}/release && tar -cJf clash-config-proxy.${{ matrix.target }}.tar.xz clash-config-proxy 

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/${{ matrix.target }}/release/*.tar.xz

  build-darwin:
    runs-on: macos-latest
    env:
      RUST_BACKTRACE: full
    strategy:
      matrix:
        target:
          - aarch64-apple-darwin
          - x86_64-apple-darwin

    steps:
      - uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          target: ${{ matrix.target }}
          toolchain: nightly
          default: true
          override: true

      - name: Install xcode-select
        if: ${{ matrix.target }} == 'aarch64-apple-darwin'
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Build ${{ matrix.target }}
        timeout-minutes: 120
        run: |
          cargo build --release --target ${{ matrix.target }}

      - name: Build check
        run: |
          ls -al target/${{ matrix.target }}/release/clash-config-proxy

      - name: Package ${{ matrix.target }}
        run: |
          cd target/${{ matrix.target }}/release && tar -cJf clash-config-proxy.${{ matrix.target }}.tar.xz clash-config-proxy 

      - name: Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: target/${{ matrix.target }}/release/*.tar.xz
